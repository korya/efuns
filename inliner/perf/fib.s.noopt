.data
	.globl	Fib_data_begin
Fib_data_begin:
	.align	4
	.long	1024
	.globl	Fib
Fib:
	.space	4
	.align	4
	.long	2298
	.globl	Fib_1
Fib_1:
	.long	Fib_fib_39
	.long	3
	.globl	Fib_data_end
Fib_data_end:
	.long	0
.text
	.globl	Fib_code_begin
Fib_code_begin:
	.align	4
	.globl	Fib_fib_39
Fib_fib_39:
.L9:
	subl	$8, %esp
.L8:
	cmpl	$5, %eax
	jge	.L2
.L7:
	movl	$3, %eax
	addl	$8, %esp
	ret
.L2:
	movl	%eax, (%esp)
	addl	$-4, %eax
	call	Fib_fib_39
.L24:
.L6:
	movl	%eax, 4(%esp)
	movl	(%esp), %eax
	addl	$-2, %eax
	call	Fib_fib_39
.L25:
.L5:
	movl	4(%esp), %ebx
	addl	%ebx, %eax
	decl	%eax
	addl	$8, %esp
	ret
	.align	4
	.globl	Fib_entry
Fib_entry:
.L22:
	movl	$Fib_1, %eax
	movl	%eax, Fib
	movl	Sys, %eax
	movl	-4(%eax), %eax
	shrl	$9, %eax
	orl	$1, %eax
	cmpl	$5, %eax
	jl	.L10
.L21:
	movl	Sys, %ebx
	movl	-4(%ebx), %eax
	shrl	$9, %eax
	cmpl	$3, %eax
	jbe	.L11
.L20:
	movl	4(%ebx), %eax
	pushl	%eax
	movl	$int_of_string, %eax
	call	caml_c_call
.L26:
.L19:
	addl	$4, %esp
.L12:
	call	Fib_fib_39
.L27:
.L18:
	call	Pervasives_string_of_int_129
.L28:
.L17:
	movl	%eax, %ebx
	movl	Pervasives + 72, %eax
	call	Pervasives_output_string_169
.L29:
.L16:
	movl	$1, %eax
	call	Pervasives_print_newline_240
.L30:
.L15:
	movl	$1, %eax
	call	Pervasives_exit_268
.L31:
.L14:
	movl	$1, %eax
	ret
.L11:
	call	caml_array_bound_error
.L13:
	ret
.L10:
	movl	$61, %eax
	jmp	.L12
	.globl	Fib_code_end
Fib_code_end:
.data
	.globl	Fib_frametable
Fib_frametable:
	.long	8
	.long	.L31
	.word	4
	.word	0
	.align	4
	.long	.L30
	.word	4
	.word	0
	.align	4
	.long	.L29
	.word	4
	.word	0
	.align	4
	.long	.L28
	.word	4
	.word	0
	.align	4
	.long	.L27
	.word	4
	.word	0
	.align	4
	.long	.L26
	.word	8
	.word	0
	.align	4
	.long	.L25
	.word	12
	.word	1
	.word	4
	.align	4
	.long	.L24
	.word	12
	.word	1
	.word	0
	.align	4
